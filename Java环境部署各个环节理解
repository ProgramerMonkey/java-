环境部署（针对Windows7操作系统）
  PATH 是什么？
  	*.java 必须编译为*.class，才能在JVM中执行，java的编译程序(工具程序)是javac。装好JDK之后，工具程序就会放在JDK安装文件夹中，
    打开命令提示符模式，随意在任何文件路径下执行 javac指令，可以在控制台中看见“‘javac’不是内部或外部命令，也不是可运行程序”的
    文字提醒，除非在命令提示符中写入javac的绝对路径执行编译，否则不可能正确的编译成*.class文件的。因为window操作系统，根本就不
    知道javac工具程序放在哪里，当要执行一个工具程序的时候，工具程序放在哪里，操作系统默认的情况下是不知道的，所以要跟操作系统
    说好，执行的工具程序指点在哪里。
        问题1：每次执行都要写上绝对路径非常费时，而且为什么安装好JDK时候直接在命令行中的执行java指令却没有报错？
           答：当你在输入一个指令而没有指定路径信息的时候，操作系统会依照PATH环境变量设定的路径顺序，依次序找哥哥路径下是否有
           这个指令，可以在命令提示符中执行“ echo %PATH% ”来看看目前操作系统PATH 环境变量中包含哪些路径信息。
           查看C:\Windows\system32,会发现其中确实有java(.exe)工具程序，这是因为安装JDK(JRE)时，Windows的JDK(JRE)安装程序会
		   自动放一份java(.exe)在此文件夹下面，所以这就是为何java指令能够在任意路径下执行的原因。
    所以只需要在PATH中设定工具程序的路径信息，系统就能找到javac工具程序。命令提示符中写入“ SET PATH=路径 ”,设定多个路径使用分
    号作分隔，通常会将原来的PATH附加在新设定值后面，这样序找其他指令时，一来：是因为系统搜索PATH会从最前方开始，如果在路径下找
    到指定的工具程序就会直接执行，当系统中安装两个以上JDK时，PATH路径中的顺序，将会决定执行哪个JDK下的工具程序。二来：才可以利		用原有的PATH信息。但是在命令提示符中设定好javac路径后,在关闭命令提示符后重新打开就又需要重新使用“SET PATH=路径”设定，也是		很麻烦，可以在“用户环境变量”或者“系统环境变量”中设定PATH,如果是共享系统中,可以在“系统环境变量”中设定,会套用在每个登录的用		户,而“用户环境变量”只是影响个别用户.开启一个"命令提示符"模式,获得的环境变量会是系统环境变量再"附加"用户环境变量。如果使用		SET指令设定环境变量，则以SET设定的结果决定。
  JVM(java)与CLASSPATH
